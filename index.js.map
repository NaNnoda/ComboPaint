{
  "version": 3,
  "sources": ["src/CanvasWrapper.ts", "src/MathUtils/Vec2.ts", "src/DocViewer.ts", "src/ComboPaintDocument.ts", "src/Layers/CPLayer.ts", "src/Layers/BackgroundLayer.ts", "src/Events/EventHandler.ts", "src/Events/PointerEventHandler.ts", "src/Main.ts"],
  "sourcesContent": ["export class CanvasWrapper {\r\n    canvas: HTMLCanvasElement = document.createElement(\"canvas\");// place the canvas in the DOM\r\n    private _actualCtx: CanvasRenderingContext2D | WebGLRenderingContext | null = null// place the canvas in the DOM\r\n    private _is2d: boolean = false;\r\n    private _isGl: boolean = false;\r\n\r\n    constructor( canvas: HTMLCanvasElement | string | null = null, ctxId: string = \"2d\",) {\r\n        this.setCanvas(canvas, ctxId);\r\n    }\r\n\r\n    setCanvas(canvas: HTMLCanvasElement | string | null = null, ctxId: string = \"2d\") {\r\n        if (typeof canvas === \"string\") {\r\n            canvas = document.getElementById(canvas) as HTMLCanvasElement;\r\n            if (!canvas) {\r\n                throw new Error(\"Failed to get canvas\");\r\n            }\r\n        } else if (canvas === null) {\r\n            canvas = document.createElement(\"canvas\");\r\n        }\r\n        this.canvas = canvas;\r\n        this.setCtx(ctxId);\r\n    }\r\n\r\n    get ctx() {\r\n        if (this._is2d) {\r\n            // console.log( this._actualCtx);\r\n            return this._actualCtx as CanvasRenderingContext2D;\r\n        }\r\n        throw new Error(\"Context is not 2d\");\r\n    }\r\n    set ctx(ctx: CanvasRenderingContext2D ) {\r\n        console.log(\"You should not be setting the context\");\r\n    }\r\n\r\n    get gl() {\r\n        if (this._isGl) {\r\n            return this._actualCtx as WebGLRenderingContext;\r\n        }\r\n        throw new Error(\"Context is not WebGL\");\r\n    }\r\n\r\n    setCtx(ctxId: string) {\r\n        this._actualCtx = this.canvas.getContext(ctxId) as CanvasRenderingContext2D | WebGLRenderingContext;\r\n        if (this._actualCtx === null) {\r\n            throw new Error(`Failed to get context [${ctxId}]`);\r\n        }\r\n        if (ctxId === \"2d\") {\r\n            this._is2d = true;\r\n        }\r\n        if (ctxId === \"webgl\") {\r\n            this._isGl = true;\r\n        }\r\n    }\r\n\r\n    set width(width: number) {\r\n        this.canvas.width = width;\r\n    }\r\n\r\n    set height(height: number) {\r\n        this.canvas.height = height;\r\n    }\r\n\r\n    get width() {\r\n        return this.canvas.width;\r\n    }\r\n\r\n    get height() {\r\n        return this.canvas.height;\r\n    }\r\n}", "export class Vec2 {\r\n    x: number;\r\n    y: number;\r\n\r\n    constructor(val1: number, val2: number | undefined = undefined) {\r\n        this.x = val1;\r\n        if (val2 === undefined) {\r\n            this.y = val1;\r\n        } else {\r\n            this.y = val2;\r\n        }\r\n    }\r\n\r\n    add(other: Vec2) {\r\n        return new Vec2(this.x + other.x, this.y + other.y);\r\n    }\r\n\r\n    sub(other: Vec2) {\r\n        return new Vec2(this.x - other.x, this.y - other.y);\r\n    }\r\n\r\n    mul(other: Vec2) {\r\n        return new Vec2(this.x * other.x, this.y * other.y);\r\n    }\r\n\r\n    div(other: Vec2) {\r\n        return new Vec2(this.x / other.x, this.y / other.y);\r\n    }\r\n\r\n    scale(scalar: number) {\r\n        return new Vec2(this.x * scalar, this.y * scalar);\r\n    }\r\n\r\n    dot(other: Vec2) {\r\n        return this.x * other.x + this.y * other.y;\r\n    }\r\n\r\n    length() {\r\n        return Math.sqrt(this.dot(this));\r\n    }\r\n\r\n    normalize() {\r\n        return this.scale(1 / this.length());\r\n    }\r\n\r\n    rotate(angle: number) {\r\n        let cos = Math.cos(angle);\r\n        let sin = Math.sin(angle);\r\n        return new Vec2(this.x * cos - this.y * sin, this.x * sin + this.y * cos);\r\n    }\r\n\r\n    angle() {\r\n        return Math.atan2(this.y, this.x);\r\n    }\r\n\r\n    angleTo(other: Vec2) {\r\n        return other.angle() - this.angle();\r\n    }\r\n}", "import ComboPaintDocument from \"./ComboPaintDocument\";\r\nimport {CanvasWrapper} from \"./CanvasWrapper\";\r\nimport {Vec2} from \"./MathUtils/Vec2\";\r\n\r\nexport class DocViewer extends CanvasWrapper {\r\n    _doc: ComboPaintDocument;\r\n\r\n    _state: TranslateState;\r\n\r\n    get state() {\r\n        return this._state;\r\n    }\r\n\r\n    get doc() {\r\n        return this._doc;\r\n    }\r\n\r\n    constructor(canvas: HTMLCanvasElement, doc: ComboPaintDocument) {\r\n        super(canvas);\r\n        this._doc = doc;\r\n        this.setDocument(doc);\r\n        this._state = new TranslateState();\r\n        let offset = new Vec2(0, 0);\r\n        // center the canvas\r\n        let scale = 2;\r\n        offset.x = (this.width) / 2 - this.doc.width / 2 * scale;\r\n        offset.y = (this.height) / 2 - this.doc.height / 2 * scale;\r\n        this.state.offset = offset;\r\n        this.state.scale = new Vec2(scale);\r\n    }\r\n\r\n    setDocument(doc: ComboPaintDocument) {\r\n        this._doc = doc;\r\n    }\r\n\r\n    render() {\r\n        console.log(\"Rendering\");\r\n        // set background color\r\n        this.ctx.fillStyle = \"#c4c4c4\";\r\n        this.ctx.fillRect(0, 0, this.width, this.height);\r\n        // this._state.translateToAndSaveCtx(this.ctx);\r\n        this.renderDoc();\r\n        this.renderBorder();\r\n        console.log(\"Rendered\");\r\n    }\r\n\r\n    renderDoc() {\r\n        this.ctx.save();\r\n        this.ctx.translate(this.state.offset.x, this.state.offset.y);\r\n        this.ctx.scale(this.state.scale.x, this.state.scale.y);\r\n        this.ctx.drawImage(this.doc.canvas, 0, 0);\r\n        this.ctx.restore();\r\n    }\r\n\r\n    renderBorder() {\r\n        this.ctx.strokeStyle = \"black\";\r\n        this.ctx.lineWidth = 1;\r\n        this.ctx.strokeRect(\r\n            this.state.offset.x, this.state.offset.y,\r\n            this.doc.width * this.state.scale.x,\r\n            this.doc.height * this.state.scale.y\r\n        );\r\n    }\r\n}\r\n\r\nclass TranslateState {\r\n    offset: Vec2 = new Vec2(0, 0);\r\n    scale: Vec2 = new Vec2(1, 1);\r\n}", "import {CanvasWrapper} from \"./CanvasWrapper\";\r\nimport {CPLayer} from \"./Layers/CPLayer\";\r\n\r\nexport default class ComboPaintDocument extends CanvasWrapper {\r\n    layers: CPLayer[] = [];\r\n\r\n    selectedLayer: CPLayer | null = null;\r\n\r\n    get height() {\r\n        return this.canvas.height;\r\n    }\r\n\r\n    set height(height: number) {\r\n        this.canvas.height = height;\r\n    }\r\n\r\n    get width() {\r\n        return this.canvas.width;\r\n    }\r\n\r\n    set width(width: number) {\r\n        this.canvas.width = width;\r\n    }\r\n\r\n    constructor(height: number = 100, width: number = 100) {\r\n        super();\r\n        this.width = width;\r\n        this.height = height;\r\n    }\r\n\r\n    addLayer(layer: CPLayer, index: number = this.layers.length) {\r\n        this.layers.splice(index, 0, layer);\r\n        if (this.selectedLayer == null) {\r\n            this.selectedLayer = layer;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        this.ctx.clearRect(0, 0, this.width, this.height);\r\n        for (let layer of this.layers) {\r\n            if (layer.visible) {\r\n                this.ctx.globalAlpha = layer.opacity;\r\n                console.log(this.ctx.globalCompositeOperation);\r\n                this.ctx.globalCompositeOperation = layer.blendMode;\r\n                layer.render();\r\n                this.ctx.drawImage(layer.canvas, 0, 0);\r\n            }\r\n        }\r\n    }\r\n\r\n    toImage() {\r\n        return this.canvas.toDataURL();\r\n    }\r\n}\r\n\r\n", "import {CanvasWrapper} from \"../CanvasWrapper\";\r\n\r\nexport class CPLayer extends CanvasWrapper {\r\n    name: string;\r\n    visible: boolean;\r\n    opacity: number;\r\n    blendMode: GlobalCompositeOperation;\r\n\r\n    constructor(width: number, height: number, name: string = \"New Layer\") {\r\n        super();\r\n        this.width = width;\r\n        this.height = height;\r\n        this.name = name;\r\n        this.visible = true;\r\n        this.opacity = 1;\r\n        // this.blendMode = \"normal\";\r\n        this.blendMode = \"source-over\";\r\n    }\r\n\r\n    render() {\r\n\r\n    }\r\n}\r\n", "import {CPLayer} from \"./CPLayer\";\r\n\r\nexport class BackgroundLayer extends CPLayer {\r\n    fillStyle: string;\r\n\r\n    constructor(width: number, height: number, fillStyle: string = \"white\") {\r\n        super(width, height, \"Background\");\r\n        this.fillStyle = fillStyle;\r\n    }\r\n\r\n    drawCheckerboard(color1: string, color2: string, size: number) {\r\n        this.ctx.fillStyle = color1;\r\n        this.ctx.fillRect(0, 0, this.width, this.height);\r\n        console.log(this.width);\r\n        this.ctx.fillStyle = color2;\r\n        for (let x = 0; x < this.width; x += size) {\r\n            for (let y = 0; y < this.height; y += size) {\r\n                if ((x / size) % 2 == (y / size) % 2) {\r\n                    this.ctx.fillRect(x, y, size, size);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.fillStyle == \"checkerboard\") {\r\n            console.log(\"checkerboard\");\r\n            this.drawCheckerboard(\"#ffffff\", \"#cbcbcb\", 10);\r\n        } else {\r\n            this.ctx.fillStyle = this.fillStyle;\r\n            this.ctx.fillRect(0, 0, this.width, this.height);\r\n        }\r\n    }\r\n}\r\n", "export default class EventHandler<Keys extends string> {\r\n    events: { [key: string]: Function[] } = {};\r\n\r\n    registerEvent(event: Keys, callback: Function) {\r\n        if (this.events[event] === undefined) {\r\n            this.events[event] = [];\r\n        }\r\n        this.events[event].push(callback);\r\n    }\r\n\r\n    triggerEvent(event: Keys, ...args: any[]) {\r\n        if (this.events[event] !== undefined) {\r\n            for (let callback of this.events[event]) {\r\n                callback(...args);\r\n            }\r\n        }\r\n    }\r\n\r\n    removeEvent(event: Keys) {\r\n        delete this.events[event];\r\n    }\r\n\r\n    removeCallback(event: Keys, callback: Function) {\r\n        if (this.events[event] !== undefined) {\r\n            this.events[event] = this.events[event].filter((value) => {\r\n                return value !== callback;\r\n            });\r\n        }\r\n    }\r\n\r\n    removeAllEvents() {\r\n        this.events = {};\r\n    }\r\n\r\n}", "import EventHandler from \"./EventHandler\";\r\nimport {Vec2} from \"../MathUtils/Vec2\";\r\n\r\nexport type PointerEventKeys = \"any\" | \"down\" | \"up\" | \"move\" | \"leave\" | \"enter\";\r\n\r\nexport class PointerPoint {\r\n    pos: Vec2;\r\n    pressure: number;\r\n    pointType: PointerEventKeys = \"any\";\r\n\r\n    constructor(pos: Vec2, pressure: number) {\r\n        this.pos = pos;\r\n        this.pressure = pressure;\r\n    }\r\n\r\n    static pointerEventToPointerPoint(e: PointerEvent): PointerPoint {\r\n        return new PointerPoint(new Vec2(e.offsetX, e.offsetY), e.pressure);\r\n    }\r\n}\r\n\r\nexport class PointerEventHandler extends EventHandler<PointerEventKeys> {\r\n    constructor() {\r\n        super();\r\n        console.log(\"PointerEventHandler created\");\r\n        this.registerEvent(\"any\", this.onAny.bind(this));\r\n    }\r\n\r\n    static bindWithElement(element: HTMLElement) {\r\n        let handler = new PointerEventHandler();\r\n        element.addEventListener(\"pointerdown\", handler.rawPointerEvent.bind(handler));\r\n        element.addEventListener(\"pointerup\", handler.rawPointerEvent.bind(handler));\r\n        element.addEventListener(\"pointermove\", handler.rawPointerEvent.bind(handler));\r\n        element.addEventListener(\"pointerenter\", handler.rawPointerEvent.bind(handler));\r\n        element.addEventListener(\"pointerleave\", handler.rawPointerEvent.bind(handler));\r\n        element.addEventListener(\"pointerover\", handler.rawPointerEvent.bind(handler));\r\n        element.addEventListener(\"pointerout\", handler.rawPointerEvent.bind(handler));\r\n        element.addEventListener(\"pointercancel\", handler.rawPointerEvent.bind(handler));\r\n        return handler;\r\n    }\r\n\r\n    rawPointerEvent(rawEvent: PointerEvent) {\r\n        let point = PointerPoint.pointerEventToPointerPoint(rawEvent);\r\n        this.triggerEvent(\"any\", point);\r\n    }\r\n\r\n    onAny(point: PointerPoint) {\r\n        console.log(\r\n            {\r\n                x: point.pos.x, y: point.pos.y\r\n            });\r\n    }\r\n}\r\n\r\nclass PointerHandlerState {\r\n    wasDown: boolean = false;\r\n    isDown: boolean = false;\r\n\r\n    lastPressure: number = 0;\r\n}\r\n", "import {DocViewer} from \"./DocViewer\";\r\nimport ComboPaintDocument from \"./ComboPaintDocument\";\r\nimport {CPLayer} from \"./Layers/CPLayer\";\r\nimport {BackgroundLayer} from \"./Layers/BackgroundLayer\";\r\nimport {PointerEventHandler} from \"./Events/PointerEventHandler\";\r\n\r\n\r\nfunction main(){\r\n    let viewCanvas = document.getElementById(\"viewCanvas\") as HTMLCanvasElement;\r\n    let width = 100;\r\n    let height = 100;\r\n    let layer0 = new BackgroundLayer(width, height, \"checkerboard\");\r\n    let layer1 = new CPLayer(width, height);\r\n    layer1.ctx.strokeStyle = \"black\";\r\n    layer1.ctx.moveTo(10, 10);\r\n    layer1.ctx.lineTo(width - 10, height - 10);\r\n    layer1.ctx.stroke();\r\n    let layer2 = new CPLayer(width, height);\r\n    layer2.ctx.fillStyle = \"red\";\r\n    layer2.ctx.fillRect(0, 0, width, height);\r\n    layer2.opacity = 0.2;\r\n\r\n    console.debug(\"Creating document\");\r\n    console.debug(\"Adding layers\");\r\n\r\n    let pointerHandler = PointerEventHandler.bindWithElement(viewCanvas);\r\n\r\n\r\n    let doc = new ComboPaintDocument(width, height);\r\n    doc.addLayer(layer0);\r\n    doc.addLayer(layer1);\r\n    doc.addLayer(layer2);\r\n    doc.render();\r\n\r\n    let docViewer = new DocViewer(viewCanvas, doc);\r\n    docViewer.render();\r\n}\r\nmain();\r\nconsole.log(\"Main.ts loaded\");\r\n"],
  "mappings": "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",
  "names": []
}
